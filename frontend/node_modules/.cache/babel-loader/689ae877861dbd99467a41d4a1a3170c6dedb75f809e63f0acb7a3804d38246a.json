{"ast":null,"code":"export const fetchResults = async topic => {\n  try {\n    const response = await fetch('http://localhost:3000/api/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: topic\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching results:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchResults","topic","response","fetch","method","headers","body","JSON","stringify","query","ok","Error","json","error","console"],"sources":["C:/Users/tombr/OneDrive - McGill University/Desktop/WORK/ECHO/ECHO SOURCE CODE/echo-mvp/frontend/src/components/services/resultsServices.js"],"sourcesContent":["export const fetchResults = async (topic) => {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/api/search', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ query: topic }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching results:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAER;MAAM,CAAC;IACvC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}