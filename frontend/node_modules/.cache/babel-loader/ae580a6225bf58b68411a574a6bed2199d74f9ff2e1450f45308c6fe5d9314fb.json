{"ast":null,"code":"const mockResults = {\n  videos: [{\n    title: 'Introduction to the Topic',\n    description: 'A comprehensive overview video',\n    link: '#'\n  }, {\n    title: 'Advanced Concepts',\n    description: 'Dive deeper into complex ideas',\n    link: '#'\n  }],\n  courses: [{\n    title: 'Beginner Course',\n    description: 'Start your journey here',\n    link: '#'\n  }, {\n    title: 'Expert Level Course',\n    description: 'For those looking to master the subject',\n    link: '#'\n  }],\n  reports: [{\n    title: 'Latest Research Findings',\n    description: 'Cutting-edge discoveries in the field',\n    link: '#'\n  }, {\n    title: 'Industry Analysis',\n    description: 'How this topic impacts various sectors',\n    link: '#'\n  }],\n  books: [{\n    title: 'The Definitive Guide',\n    description: 'Everything you need to know in one book',\n    link: '#'\n  }, {\n    title: 'Practical Applications',\n    description: 'Real-world use cases and examples',\n    link: '#'\n  }]\n};\nexport const fetchResults = async topic => {\n  // Simulate API call delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n\n  // In a real app, you would use the topic to fetch relevant results\n  // For now, we'll just return the mock results\n  return mockResults;\n};","map":{"version":3,"names":["mockResults","videos","title","description","link","courses","reports","books","fetchResults","topic","Promise","resolve","setTimeout"],"sources":["C:/Users/tombr/OneDrive - McGill University/Desktop/WORK/ECHO/ECHO SOURCE CODE/echo-mvp/frontend/src/components/services/resultsServices.js"],"sourcesContent":["const mockResults = {\r\n  videos: [\r\n    { title: 'Introduction to the Topic', description: 'A comprehensive overview video', link: '#' },\r\n    { title: 'Advanced Concepts', description: 'Dive deeper into complex ideas', link: '#' },\r\n  ],\r\n  courses: [\r\n    { title: 'Beginner Course', description: 'Start your journey here', link: '#' },\r\n    { title: 'Expert Level Course', description: 'For those looking to master the subject', link: '#' },\r\n  ],\r\n  reports: [\r\n    { title: 'Latest Research Findings', description: 'Cutting-edge discoveries in the field', link: '#' },\r\n    { title: 'Industry Analysis', description: 'How this topic impacts various sectors', link: '#' },\r\n  ],\r\n  books: [\r\n    { title: 'The Definitive Guide', description: 'Everything you need to know in one book', link: '#' },\r\n    { title: 'Practical Applications', description: 'Real-world use cases and examples', link: '#' },\r\n  ],\r\n};\r\n\r\nexport const fetchResults = async (topic) => {\r\n  // Simulate API call delay\r\n  await new Promise(resolve => setTimeout(resolve, 1000));\r\n  \r\n  // In a real app, you would use the topic to fetch relevant results\r\n  // For now, we'll just return the mock results\r\n  return mockResults;\r\n};"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAClBC,MAAM,EAAE,CACN;IAAEC,KAAK,EAAE,2BAA2B;IAAEC,WAAW,EAAE,gCAAgC;IAAEC,IAAI,EAAE;EAAI,CAAC,EAChG;IAAEF,KAAK,EAAE,mBAAmB;IAAEC,WAAW,EAAE,gCAAgC;IAAEC,IAAI,EAAE;EAAI,CAAC,CACzF;EACDC,OAAO,EAAE,CACP;IAAEH,KAAK,EAAE,iBAAiB;IAAEC,WAAW,EAAE,yBAAyB;IAAEC,IAAI,EAAE;EAAI,CAAC,EAC/E;IAAEF,KAAK,EAAE,qBAAqB;IAAEC,WAAW,EAAE,yCAAyC;IAAEC,IAAI,EAAE;EAAI,CAAC,CACpG;EACDE,OAAO,EAAE,CACP;IAAEJ,KAAK,EAAE,0BAA0B;IAAEC,WAAW,EAAE,uCAAuC;IAAEC,IAAI,EAAE;EAAI,CAAC,EACtG;IAAEF,KAAK,EAAE,mBAAmB;IAAEC,WAAW,EAAE,wCAAwC;IAAEC,IAAI,EAAE;EAAI,CAAC,CACjG;EACDG,KAAK,EAAE,CACL;IAAEL,KAAK,EAAE,sBAAsB;IAAEC,WAAW,EAAE,yCAAyC;IAAEC,IAAI,EAAE;EAAI,CAAC,EACpG;IAAEF,KAAK,EAAE,wBAAwB;IAAEC,WAAW,EAAE,mCAAmC;IAAEC,IAAI,EAAE;EAAI,CAAC;AAEpG,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C;EACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;EAEvD;EACA;EACA,OAAOX,WAAW;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}