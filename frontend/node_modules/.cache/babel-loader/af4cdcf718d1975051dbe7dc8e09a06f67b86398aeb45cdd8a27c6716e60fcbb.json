{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tombr\\\\OneDrive - McGill University\\\\Desktop\\\\WORK\\\\ECHO\\\\ECHO SOURCE CODE\\\\echo-mvp\\\\frontend\\\\src\\\\components\\\\LoadingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './LoadingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingPage = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const query = params.get('query');\n    if (query) {\n      setSearchQuery(query);\n      // Redirect to results page after 3 seconds\n      const timer = setTimeout(() => {\n        navigate(`/results?query=${encodeURIComponent(query)}`);\n      }, 3000);\n      return () => clearTimeout(timer);\n    } else {\n      console.error('No search query provided');\n      navigate('/');\n    }\n  }, [location, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Echo is scanning resources for \\\"\", searchQuery, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingPage, \"jQhNNp36ReBShuRDwHXJgJ6ymYI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = LoadingPage;\nexport default LoadingPage;\nvar _c;\n$RefreshReg$(_c, \"LoadingPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","LoadingPage","_s","searchQuery","setSearchQuery","location","navigate","params","URLSearchParams","search","query","get","timer","setTimeout","encodeURIComponent","clearTimeout","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tombr/OneDrive - McGill University/Desktop/WORK/ECHO/ECHO SOURCE CODE/echo-mvp/frontend/src/components/LoadingPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './LoadingPage.css';\r\n\r\nconst LoadingPage = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const query = params.get('query');\r\n    if (query) {\r\n      setSearchQuery(query);\r\n      // Redirect to results page after 3 seconds\r\n      const timer = setTimeout(() => {\r\n        navigate(`/results?query=${encodeURIComponent(query)}`);\r\n      }, 3000);\r\n\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      console.error('No search query provided');\r\n      navigate('/');\r\n    }\r\n  }, [location, navigate]);\r\n\r\n  return (\r\n    <div className=\"loading-page\">\r\n      <div className=\"loading-content\">\r\n        <h1>Echo is scanning resources for \"{searchQuery}\"</h1>\r\n        <div className=\"loading-spinner\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;IACnD,MAAMC,KAAK,GAAGH,MAAM,CAACI,GAAG,CAAC,OAAO,CAAC;IACjC,IAAID,KAAK,EAAE;MACTN,cAAc,CAACM,KAAK,CAAC;MACrB;MACA,MAAME,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BP,QAAQ,CAAC,kBAAkBQ,kBAAkB,CAACJ,KAAK,CAAC,EAAE,CAAC;MACzD,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMK,YAAY,CAACH,KAAK,CAAC;IAClC,CAAC,MAAM;MACLI,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MACzCX,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,oBACEN,OAAA;IAAKkB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BnB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BnB,OAAA;QAAAmB,QAAA,GAAI,mCAAgC,EAAChB,WAAW,EAAC,IAAC;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDvB,OAAA;QAAKkB,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9BID,WAAW;EAAA,QAEEJ,WAAW,EACXC,WAAW;AAAA;AAAA0B,EAAA,GAHxBvB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}